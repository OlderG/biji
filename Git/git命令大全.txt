查看日志命令：
	    git log filename
	    git log --pretty=oneline：每一行显示一个提交
	    git log --pretty=format:"%h - %an,%ar:%s" --graph：允许指定自己的输出格式。
            格式选项		输出的格式描述
               %H		提交对象的散列值   
               %h               提交对象的简短散列值
               %T               树对象的散列值
               %t               树对象的简短散列值
               %P               父对象的散列值
               %p               父对象的简短散列值
               %an              作者的名字
               %ae              作者的电子邮箱
               %ad              创作日期
               %ar              相对于当前日期的创作日期
               %cn              提交者的名字。
	       %ce              提交者的电子邮箱
               %cd              提交日期
               %cr              相对于当前日期的提交日期
               %s               提交信息的主题
	    git log --oneline
	    git reflog  查看提交的id
	    git log --follow filename 继续列出出renames之外的文件的历史  Git在日志中回溯并找到内容相关联的整个历史记录
            git log --graph --pretty=oneline --abbrev-commit
            git log -p：显示每次提交所引入的差异（可以跟着-2，即每次显示最近两次的提交）
            git log --stat：查看每个提交的简要统计信息。













版本后退:
	git reset --hard 索引值  
	git reset -hard HEAD^  #一个^后退一个
	git reset --hard HEAD~3 #数字表名后退几步
    一个符号^每次只能退一个
    符号~指定退


连接远程库：
	  git remote add 别名 远程库地址：添加远程仓库
	  git remote add -f alias repository
	  git remote -v：显示Git存储的每个远程仓库对应的URL
          git remote update
推送：    git push+别名+分支名

克隆：
    git clone+远程库地址
更新本地库：
	   git fetch+别名+分支名 --将远程库的最新内容抓取下来
	   git check 别名/分支名 --查看更新的内容
	   git merge 别名/分支名 --将远程库的分支内容合并到本地
	   git pull 别名+分支名

git rm --cached 将一个已暂存的文件转换成未暂存的,但这种方式很危险，因为你也许会忘记这个文件是不再被追踪的文件

git rm file：对已经提交到版本库中的文件，会将文件从版本库和工作目录中删除

git checkout HEAD --filename：恢复删除文件

撤销修改：
	 git checkout HEAD 文件名  回复指定文件的旧版本
从暂存区撤出:
	     git reset HEAD 文件名

创建分支：git branch 分支名
切换分支：git checkout 分支名
创建分支,并切换到该分支：git checkout -b 分支名
合并分支：git merge 分支名 
	  git merge --no-ff 分支名:禁用Fast forward
删除分支：git branch -d 分支名
	  git branch -D 分支名：强制删除
冲突：

储存：git stash
查看储存：git stash list
回复储存：git stash apply:恢复，但是stash内容不会被删除
	  git stash pop:恢复，但是stash内容会被删除

查看远程分支：git remote -v
	  
git hash-object file


